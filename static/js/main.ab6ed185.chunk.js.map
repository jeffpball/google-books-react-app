{"version":3,"sources":["components/Navbar/index.js","components/Jumbotron/index.js","utils/api.js","components/Button/index.js","components/ResultCard/index.js","components/SearchForm/index.js","components/pages/Home.js","components/pages/Saved.js","App.js","registerServiceWorker.js","index.js"],"names":["Navbar","react_default","a","createElement","className","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","href","Jumbotron","api","getGoogleSearchBooks","query","axios","get","getBooks","getBook","saveBook","savedBooks","post","deleteBook","delete","Button","props","children","onClick","data-id","ResultCard","_ref","title","link","author","image","description","components_Button","event","src","alt","SearchForm","name","placeholder","onChange","handleInputChange","handleFormSubmit","Home","state","books","results","_event$target","target","value","_this","setState","Object","defineProperty","preventDefault","API","then","res","data","items","catch","err","handleSaveBook","bookID","getAttribute","newState","objectSpread","targetBook","filter","book","newBook","volumeInfo","authors","imageLinks","thumbnail","infoLink","console","log","_this2","this","_this3","style","backgroundImage","concat","components_Navbar","components_Jumbotron","components_SearchForm","map","components_ResultCard","key","Component","Saved","handleDeleteBook","_id","response","App","react_router_dom","react_router","exact","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","fetch","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.ab6ed185.chunk.js","sourcesContent":["\nimport React from \"react\";\nimport { BrowserRouter as Router, Link } from \"react-router-dom\"\n\nfunction Navbar() {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-muted\">\n      <p className=\"navbar-brand\">Google Books</p>\n      <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item active\">\n              <a className=\"nav-link\" href=\"/\">Search</a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" href=\"/saved\">Saved</a>\n            </li>\n          </ul>\n      </div>\n    </nav>)\n}\n\nexport default Navbar;","import React from 'react';\n\nfunction Jumbotron() {\n    return (\n    <div className='jumbotron jumbotron-fluid bg-info text-white text-center'>\n        <h1 className='display-2'>\n            Google Book Search\n        </h1>\n        <h2 className='lead'>\n            Find and save your favorite books\n        </h2>\n    </div>\n    )\n}\n\nexport default Jumbotron;","import axios from \"axios\"\n\nexport default {\n    // Get book from google search \n    getGoogleSearchBooks: function (query) {\n        return axios.get(\"https://www.googleapis.com/books/v1/volumes?q=\" + query)\n    },\n\n    // Gets all books\n    getBooks: function () {\n        return axios.get(\"/api/books\");\n    },\n\n    // Gets the book with the given id\n    getBook: function (id) {\n        return axios.get(\"/api/books/\" + id);\n    },\n\n    // Saves a book to the database\n    saveBook: function (savedBooks) {\n        return axios.post(\"/api/books/\", savedBooks);\n    },\n\n    // Deletes the book with the given id\n    deleteBook: function (id) {\n        return axios.delete(\"/api/books/\" + id);\n    }\n\n}","import React from 'react';\n\nfunction Button(props) {\n    if (props.href) {\n        return (\n        <button className='btn btn-outline-dark btn-lg btn-block'>\n            <a href={props.href}>{props.children}</a>\n        </button>\n        )\n    }\n    else if (props.onClick) {\n        return (\n            <button \n            className='btn btn-primary btn-lg btn-block'\n            onClick={props.onClick}\n            data-id={props.id} \n            >\n            {props.children}\n        </button>\n        )\n    }\n\n}\n\nexport default Button;","import React from 'react';\nimport Button from '../Button'\nimport \"../../style.css\";\n\nfunction ResultCard({ title, link, id, author, image, description, saveBook, deleteBook }) {\n    if (!saveBook) {\n        return (\n            <div id='result-card'>\n                <div className='row text-center' id='result-header'>\n                    <div className='col-3'>\n                        <h4>{title}</h4>\n                        <small>\n                            <br />Written By:\n                        <br />{author}</small>\n                    </div>\n                    <span className='col-3 offset-6'>\n                        <Button\n                            href={link}\n                        >View\n                        </Button>\n                        <Button\n                            id={id}\n                            onClick={(event) => deleteBook(event)}\n                        >Delete\n                        </Button>\n                    </span>\n                </div>\n                <div className='row'>\n                    <hr />\n                </div>\n                <div className='row'>\n                    <div className='col-3 text-center'>\n                        <img src={image} alt={title} />\n                    </div>\n                    <div className='col-9'>\n                        <p className='lead'>Description: </p>\n                        {description}\n                    </div>\n                </div>\n            </div>\n        )\n    } else {\n        return (\n            <div id='result-card'>\n                <div className='row text-center' id='result-header'>\n                    <div className='col-3'>\n                        <h4>{title}</h4>\n                        <small>\n                            <br />Written By:\n                        <br />{author}</small>\n                    </div>\n                    <span className='col-3 offset-6'>\n                        <Button\n                            href={link}\n                        >View\n                        </Button>\n                        <Button\n                            id={id}\n                            onClick={(event) => saveBook(event)}\n                        >Save\n                        </Button>\n                    </span>\n                </div>\n                <div className='row'>\n                    <hr />\n                </div>\n                <div className='row'>\n                    <div className='col-3 text-center'>\n                        <img src={image} alt={title} />\n                    </div>\n                    <div className='col-9'>\n                        <p className='lead'>Description: </p>\n                        {description}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default ResultCard;","import React from 'react';\n\nfunction SearchForm(props) {\n\n    return (\n        <div id='search-form' className='text-center'>\n            <input className='form-control' name='title'\n                placeholder='Search for a book...'\n                type='text'\n                onChange={props.handleInputChange}></input>\n                <br />\n                <button\n                className='btn btn-block btn-primary'\n                    onClick={props.handleFormSubmit}\n                    type='submit'\n                >   Search\n            </button>\n        </div>\n    )\n}\n\nexport default SearchForm","import React, { Component } from \"react\";\nimport Navbar from '../Navbar'\nimport Jumbotron from '../Jumbotron'\nimport API from '../../utils/api'\nimport ResultCard from \"../ResultCard\";\nimport SearchForm from \"../SearchForm\";\n\nclass Home extends Component {\n    state = {\n        books: [],\n        results: [],\n        title: \"\"\n    }\n\n    componentDidMount() {\n        API.getBooks()\n            .then(res =>  {\n                this.setState({ books: res.data });\n                console.log('books:', this.state.books)\n            })\n            .catch(err => {\n                throw err\n            })\n    }\n\n    handleInputChange = event => {\n        const { name, value } = event.target\n        this.setState({\n            [name]: value\n        })\n    }\n\n    handleFormSubmit = event => {\n        event.preventDefault();\n        API.getGoogleSearchBooks(this.state.title)\n            .then(res => {\n                this.setState({\n                    results: res.data.items\n                })\n            })\n            .catch(err => {\n                throw err\n            })\n    }\n    \n    handleSaveBook = event => {\n        event.preventDefault();\n\n        const bookID = event.target.getAttribute('data-id')\n        // console.log(\"Book ID:\", bookID )\n\n        const newState = {...this.state}\n        // console.log(this.state.results)\n\n        let targetBook = this.state.results.filter(book => book.id === bookID)\n        // Parses out book data from results by book id\n\n        const newBook = {\n            title: targetBook[0].volumeInfo.title,\n            authors: targetBook[0].volumeInfo.authors,\n            description: targetBook[0].volumeInfo.description,\n            image: targetBook[0].volumeInfo.imageLinks.thumbnail,\n            link: targetBook[0].volumeInfo.infoLink\n        }\n        // Instantiates new object formatted per the db schema.\n\n        if (this.state.books[bookID]) {\n            console.log(`You've already saved that book.`)\n            return\n\n        } else {\n            newState.books[bookID] = newBook\n            // console.log('Target:', targetBook[0])\n            \n            this.setState(newState)\n            // Mutates state to now hold saved books in this.state.books\n            console.log('Updated this.state:', this.state.books)\n\n            API.saveBook({\n                title: targetBook[0].volumeInfo.title,\n                authors: targetBook[0].volumeInfo.authors,\n                description: targetBook[0].volumeInfo.description,\n                image: targetBook[0].volumeInfo.imageLinks.thumbnail,\n                link: targetBook[0].volumeInfo.infoLink\n            })\n\n            // console.log(newState.books)\n        }\n    }\n\n    render() {\n        return (\n            <div style={{backgroundImage: `url(${'../img/books.jpg'})`}} >\n                <Navbar />\n                <Jumbotron />\n                <div className='container w-50'>\n                    <SearchForm\n                    handleFormSubmit = {this.handleFormSubmit}\n                    handleInputChange = {this.handleInputChange} />\n                    <div className='container-fluid' id='main-content'>\n                        {this.state.results.map((book) => {\n                            return (\n                                <ResultCard\n                                    key={book.id}\n                                    title={book.volumeInfo.title}\n                                    id={book.id}\n                                    link={book.volumeInfo.infoLink}\n                                    author={book.volumeInfo.authors}\n                                    image={book.volumeInfo.imageLinks.thumbnail}\n                                    description={book.volumeInfo.description}\n                                    saveBook={this.handleSaveBook}\n                                />\n                            )\n                        })}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Home;\n","import React, { Component } from \"react\";\nimport Navbar from '../Navbar'\nimport Jumbotron from '../Jumbotron'\nimport API from '../../utils/api'\nimport ResultCard from \"../ResultCard\";\n\nclass Saved extends Component {\n    state = {\n        results: []\n    }\n\n    componentDidMount() {\n        API.getBooks()\n            .then(res =>  {\n                this.setState({ results: res.data });\n                console.log('results:', this.state.results)\n            })\n            .catch(err => {\n                throw err\n            })\n    }\n\n    handleDeleteBook = event => {\n        event.preventDefault();\n\n        const bookID = event.target.getAttribute('data-id')\n\n        const newState = {...this.state}\n\n        newState.results = this.state.results.filter(book => book._id !== bookID)\n        // Filters out any books with the matching target id\n\n        API.deleteBook(bookID).then(\n            (response) => {\n                this.setState(newState)\n                console.log(response);\n\n            }\n        ).catch(\n            (err) => {\n                console.log(err);\n            }\n        );\n    }\n\n    render() {\n        return (\n            <div>\n                <Navbar />\n                <Jumbotron />\n                <div className='container'>\n                    <h3>Your Saved Books</h3>\n                    <div className='container-fluid' id='main-content'>\n                        {this.state.results.map((book) => {\n                            return (\n                                <ResultCard\n                                    key={book._id}\n                                    title={book.title}\n                                    id={book._id}\n                                    link={book.link}\n                                    author={book.authors}\n                                    image={book.image}\n                                    description={book.description}\n                                    deleteBook={this.handleDeleteBook}\n                                />\n                            )\n                        })}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Saved;\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport Home from './components/pages/Home'\nimport Saved from './components/pages/Saved'\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div>\n          <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/saved\" component={Saved} />\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}